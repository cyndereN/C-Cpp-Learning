// 1. 引用的格式：数据类型& 引用名 = 变量名；
// 指针的格式：数据类型 * 变量名 = 指向的变量地址；

// 2. 使用引用一定要初始化
// 指针为了不出现野指针也要初始化为NULL

// 3. 引用只能对数组的元素使用，不能对整个数组使用
// 指针可以指向整个数组

// 4.引用作为函数参数时，调用不会开辟内存空间，只是给变量取了个别名
// 指针作为函数参数时，调用时在32位系统会开辟4字节的空间，且传入的变量要+&


// 5. 引用初始化后就不能再修改了
// 指针可以指向一个变量的地址后，也可以指向别的变量地址，可以改变

// 补充：引用定义后不能修改，指针可以修改，所以使用引用相较于指针更安全
// 引用的本质在c++的内部实现是一个指针常量
// 指向不可更改，指向的值可以更改

// 补充：
int& ref = a;
ref = 20; // 内部发现是引用，自动转换： *ref = 20, 找到它指向的那块内存的数据，将其改成20

int& test02() {
	static int a = 10;  // 静态变量，存放在全局区
	return a;
}
test02() = 1000;  // 2. 如果函数的返回值是引用，这个函数调用可以作为左值