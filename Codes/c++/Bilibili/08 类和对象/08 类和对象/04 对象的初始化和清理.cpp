// 构造函数和析构函数
// 如果我们不提供，编译器自动调用
// 1. 构造函数
// 类名(){}
// ・ 没有返回值也不写void
// ・ 函数名与类名相同
// ・ 构造很难书可以有参数，因此可以发生重载
// ・ 程序在调用对象的时候回自动调用构造

// 2. 析构函数
// ~类名(){}
// ・ 析构函数，没有返回值也不写void
// ・ 函数名与类名相同，在名称前加上符号~
// ・ 析构函数不可以有参数
// ・ 在对象销毁前会自动调用析构，无需手动调用，而且只会调用一次

#include<iostream>
using namespace std;

class Person {
public:
	
	Person() {
		cout << "Person 构造函数的调用" << endl;
	}

	
	~Person() {
		cout << "Person 析构函数的调用" << endl;
	}

};

void test01() {
	Person p; // 在栈上的数据，test01执行完毕后，释放这个对象
}


int main() {
	test01(); 
	return 0;
}

/****************************************************************************/
